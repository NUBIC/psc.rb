CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE SEQUENCE CSM_MAPPING_MAPPING_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_GROUP_GROUP_ID_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_PRIVILEGE_PRIVILEGE_ID_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_PROTECTIO_PROTECTION_E_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_PROTECTIO_PROTECTION_G_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_PG_PE_PG_PE_ID_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_ROLE_ROLE_ID_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_ROLE_PRIV_ROLE_PRIVILE_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_USER_GROU_USER_GROUP_I_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_USER_GROU_USER_GROUP_R_SEQ AS INTEGER START WITH 0 
CREATE SEQUENCE CSM_USER_PE_USER_PROTECTIO_SEQ AS INTEGER START WITH 0 
CREATE MEMORY TABLE BERING_VERSION(RELEASE INTEGER,MIGRATION INTEGER)
CREATE MEMORY TABLE STUDIES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),ASSIGNED_IDENTIFIER VARCHAR(900),AMENDMENT_ID INTEGER,DEV_AMENDMENT_ID INTEGER,LOAD_STATUS INTEGER DEFAULT 1 NOT NULL,LONG_TITLE VARCHAR(2147483647),PROVIDER VARCHAR(255),LAST_REFRESH TIMESTAMP,CONSTRAINT UN_STUDY_ASSIGNED_ID UNIQUE(ASSIGNED_IDENTIFIER),CONSTRAINT UN_STUDY_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE STUDY_SEGMENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,NAME VARCHAR(2147483647) NOT NULL,EPOCH_ID INTEGER,LIST_INDEX INTEGER DEFAULT 0,GRID_ID VARCHAR(255),CYCLE_LENGTH INTEGER,CONSTRAINT UN_SEGMENT_GRID_ID UNIQUE(GRID_ID),CONSTRAINT CHECK_CYCLE_LENGTH CHECK(STUDY_SEGMENTS.CYCLE_LENGTH>0))
CREATE MEMORY TABLE ACTIVITIES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,NAME VARCHAR(255) NOT NULL,DESCRIPTION VARCHAR(2147483647),ACTIVITY_TYPE_ID INTEGER NOT NULL,GRID_ID VARCHAR(255),SOURCE_ID INTEGER,CODE VARCHAR(255),CONSTRAINT UN_ACTIVITY_CODE UNIQUE(CODE,SOURCE_ID),CONSTRAINT UN_ACTIVITY_NAME UNIQUE(NAME,SOURCE_ID),CONSTRAINT UN_ACTIVITY_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE ACTIVITY_TYPES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,NAME VARCHAR(2147483647) NOT NULL,GRID_ID VARCHAR(255),CONSTRAINT UN_ACTIVITY_TYPES_GRID_ID UNIQUE(GRID_ID),CONSTRAINT UN_TYPE_NAME UNIQUE(NAME))
CREATE MEMORY TABLE PERIODS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(2147483647),STUDY_SEGMENT_ID INTEGER,START_DAY INTEGER DEFAULT 1 NOT NULL,DURATION_QUANTITY INTEGER NOT NULL,DURATION_UNIT VARCHAR(2147483647) DEFAULT 'day' NOT NULL,REPETITIONS INTEGER DEFAULT 1 NOT NULL,VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),CONSTRAINT UN_PERIOD_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE PLANNED_ACTIVITIES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,ACTIVITY_ID INTEGER NOT NULL,PERIOD_ID INTEGER,DAY INTEGER NOT NULL,DETAILS VARCHAR(2147483647),GRID_ID VARCHAR(255),CONDITION VARCHAR(2147483647),POPULATION_ID INTEGER,WEIGHT INTEGER,CONSTRAINT FK_EVENT_ACTIVITY FOREIGN KEY(ACTIVITY_ID) REFERENCES ACTIVITIES(ID),CONSTRAINT FK_EVENT_PERIOD FOREIGN KEY(PERIOD_ID) REFERENCES PERIODS(ID),CONSTRAINT UN_PLND_ACT_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE SUBJECTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,FIRST_NAME VARCHAR(255),LAST_NAME VARCHAR(255),BIRTH_DATE DATE,GENDER VARCHAR(2147483647) NOT NULL,PERSON_ID VARCHAR(255),VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),LOAD_STATUS INTEGER DEFAULT 1 NOT NULL,CONSTRAINT UN_SUBJECT_GRID_ID UNIQUE(GRID_ID),CONSTRAINT CK_IDENTIFIERS CHECK((SUBJECTS.PERSON_ID IS NOT NULL) OR ((((SUBJECTS.PERSON_ID IS NULL) AND (SUBJECTS.FIRST_NAME IS NOT NULL)) AND (SUBJECTS.LAST_NAME IS NOT NULL)) AND (SUBJECTS.BIRTH_DATE IS NOT NULL))))
CREATE MEMORY TABLE SITES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(255) NOT NULL,VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),ASSIGNED_IDENTIFIER VARCHAR(900) NOT NULL,PROVIDER VARCHAR(255),LAST_REFRESH TIMESTAMP,CONSTRAINT UN_SITE_NAME UNIQUE(NAME),CONSTRAINT UN_SITE_ASSIGNED_ID UNIQUE(ASSIGNED_IDENTIFIER),CONSTRAINT UN_SITE_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE STUDY_SITES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,SITE_ID INTEGER NOT NULL,STUDY_ID INTEGER NOT NULL,VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),PROVIDER VARCHAR(255),LAST_REFRESH TIMESTAMP,CONSTRAINT UN_STUDY_SITE_COMPONENTS UNIQUE(STUDY_ID,SITE_ID),CONSTRAINT UN_STUDY_SITE_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE SUBJECT_ASSIGNMENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,STUDY_SITE_ID INTEGER NOT NULL,SUBJECT_ID INTEGER NOT NULL,START_DATE DATE NOT NULL,VERSION INTEGER DEFAULT 0 NOT NULL,STUDY_SUBJECT_ID VARCHAR(2147483647),GRID_ID VARCHAR(255),END_DATE DATE,CURRENT_AMENDMENT_ID INTEGER NOT NULL,MANAGER_CSM_USER_ID INTEGER,CONSTRAINT UN_SUBJ_ASSIGN_GRID_ID UNIQUE(GRID_ID),CONSTRAINT FK_SUBJECTASSIGN_SUBJECT FOREIGN KEY(SUBJECT_ID) REFERENCES SUBJECTS(ID))
CREATE MEMORY TABLE PLANNED_CALENDARS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,STUDY_ID INTEGER NOT NULL,VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),CONSTRAINT FK_PLAN_SCHED_STUDY FOREIGN KEY(STUDY_ID) REFERENCES STUDIES(ID),CONSTRAINT UN_PLND_CAL_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE EPOCHS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,NAME VARCHAR(2147483647) NOT NULL,PLANNED_CALENDAR_ID INTEGER,LIST_INDEX INTEGER DEFAULT 0,GRID_ID VARCHAR(255),CONSTRAINT FK_EPOCH_SCHED FOREIGN KEY(PLANNED_CALENDAR_ID) REFERENCES PLANNED_CALENDARS(ID),CONSTRAINT UN_EPOCH_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE CSM_APPLICATION(APPLICATION_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,APPLICATION_NAME VARCHAR(255) NOT NULL,APPLICATION_DESCRIPTION VARCHAR(200) NOT NULL,DECLARATIVE_FLAG INTEGER DEFAULT 0,ACTIVE_FLAG INTEGER DEFAULT 0 NOT NULL,UPDATE_DATE TIMESTAMP DEFAULT CURRENT_DATE,DATABASE_URL VARCHAR(100),DATABASE_USER_NAME VARCHAR(100),DATABASE_PASSWORD VARCHAR(100),DATABASE_DIALECT VARCHAR(100),DATABASE_DRIVER VARCHAR(100),CSM_VERSION VARCHAR(20),CONSTRAINT UQ_APPLICATION_NAME UNIQUE(APPLICATION_NAME))
CREATE MEMORY TABLE CSM_USER(USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,LOGIN_NAME VARCHAR(100) NOT NULL,FIRST_NAME VARCHAR(100) NOT NULL,LAST_NAME VARCHAR(100) NOT NULL,ORGANIZATION VARCHAR(100),DEPARTMENT VARCHAR(100),TITLE VARCHAR(100),PHONE_NUMBER VARCHAR(15),PASSWORD VARCHAR(100),EMAIL_ID VARCHAR(100),START_DATE TIMESTAMP,END_DATE TIMESTAMP,UPDATE_DATE TIMESTAMP DEFAULT CURRENT_DATE,MIGRATED_FLAG INTEGER DEFAULT 0,PREMGRT_LOGIN_NAME VARCHAR(100),CONSTRAINT UQ_LOGIN_NAME UNIQUE(LOGIN_NAME))
CREATE MEMORY TABLE CONFIGURATION(PROP VARCHAR(255) NOT NULL PRIMARY KEY,VALUE VARCHAR(2147483647),VERSION INTEGER DEFAULT 0 NOT NULL)
CREATE MEMORY TABLE SCHEDULED_CALENDARS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,ASSIGNMENT_ID INTEGER NOT NULL,GRID_ID VARCHAR(255),CONSTRAINT FK_SCHED_CAL_ASSIGN FOREIGN KEY(ASSIGNMENT_ID) REFERENCES SUBJECT_ASSIGNMENTS(ID),CONSTRAINT UN_SCHED_CAL_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE SCHEDULED_ACTIVITY_MODES(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(2147483647) NOT NULL)
CREATE MEMORY TABLE SCHEDULED_ACTIVITIES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,PLANNED_ACTIVITY_ID INTEGER,IDEAL_DATE DATE NOT NULL,CURRENT_STATE_MODE_ID INTEGER DEFAULT 1 NOT NULL,CURRENT_STATE_DATE DATE NOT NULL,NOTES VARCHAR(2147483647),SCHEDULED_STUDY_SEGMENT_ID INTEGER NOT NULL,CURRENT_STATE_REASON VARCHAR(2147483647),GRID_ID VARCHAR(255),ACTIVITY_ID INTEGER,DETAILS VARCHAR(2147483647),SOURCE_AMENDMENT_ID INTEGER NOT NULL,REPETITION_NUMBER INTEGER,CONSTRAINT FK_SCHED_EVT_EVT FOREIGN KEY(PLANNED_ACTIVITY_ID) REFERENCES PLANNED_ACTIVITIES(ID),CONSTRAINT FK_SCHED_EVT_STATE FOREIGN KEY(CURRENT_STATE_MODE_ID) REFERENCES SCHEDULED_ACTIVITY_MODES(ID),CONSTRAINT UN_SCHED_ACT_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE SCHEDULED_STUDY_SEGMENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,SCHEDULED_CALENDAR_ID INTEGER NOT NULL,STUDY_SEGMENT_ID INTEGER NOT NULL,LIST_INDEX INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),START_DATE DATE NOT NULL,START_DAY INTEGER NOT NULL,CONSTRAINT FK_SCHED_ARM_CAL FOREIGN KEY(SCHEDULED_CALENDAR_ID) REFERENCES SCHEDULED_CALENDARS(ID),CONSTRAINT FK_SCHED_ARM_ARM FOREIGN KEY(STUDY_SEGMENT_ID) REFERENCES STUDY_SEGMENTS(ID),CONSTRAINT UN_SCHED_SEGMT_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE SCHEDULED_ACTIVITY_STATES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,SCHEDULED_ACTIVITY_ID INTEGER NOT NULL,MODE_ID INTEGER DEFAULT 1 NOT NULL,ACTUAL_DATE DATE NOT NULL,REASON VARCHAR(2147483647),LIST_INDEX INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),CONSTRAINT FK_SCHED_EVT_STATE_EVT FOREIGN KEY(SCHEDULED_ACTIVITY_ID) REFERENCES SCHEDULED_ACTIVITIES(ID),CONSTRAINT FK_SCHED_EVT_STATE_MODE FOREIGN KEY(MODE_ID) REFERENCES SCHEDULED_ACTIVITY_MODES(ID),CONSTRAINT UN_SCHED_ACT_STATE_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE LOGIN_AUDITS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,IP_ADDRESS VARCHAR(2147483647) NOT NULL,LOGIN_STATUS VARCHAR(2147483647) NOT NULL,TIME TIMESTAMP,USER_NAME VARCHAR(2147483647) NOT NULL,VERSION INTEGER NOT NULL,GRID_ID VARCHAR(255))
CREATE MEMORY TABLE AUDIT_EVENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,IP_ADDRESS VARCHAR(2147483647) NOT NULL,USER_NAME VARCHAR(2147483647) NOT NULL,TIME TIMESTAMP NOT NULL,CLASS_NAME VARCHAR(2147483647) NOT NULL,OPERATION VARCHAR(2147483647) NOT NULL,URL VARCHAR(2147483647) NOT NULL,VERSION INTEGER DEFAULT 0 NOT NULL,OBJECT_ID INTEGER NOT NULL,GRID_ID VARCHAR(255),USER_ACTION_ID VARCHAR(255))
CREATE MEMORY TABLE AUDIT_EVENT_VALUES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,AUDIT_EVENT_ID INTEGER NOT NULL,ATTRIBUTE_NAME VARCHAR(2147483647) NOT NULL,PREVIOUS_VALUE VARCHAR(2147483647),NEW_VALUE VARCHAR(2147483647),VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255))
CREATE MEMORY TABLE ADVERSE_EVENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,DETECTION_DATE DATE,DESCRIPTION VARCHAR(2147483647) NOT NULL,GRID_ID VARCHAR(255),CONSTRAINT UN_AE_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE NOTIFICATIONS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,ASSIGNMENT_ID INTEGER NOT NULL,DISMISSED BOOLEAN NOT NULL,GRID_ID VARCHAR(255),ACTION_REQUIRED BOOLEAN,MESSAGE VARCHAR(2147483647),TITLE VARCHAR(2147483647),CONSTRAINT UN_AE_NOTICE_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE HOLIDAYS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,DISCRIMINATOR_ID INTEGER NOT NULL,SITE_ID INTEGER NOT NULL,DAY INTEGER,MONTH INTEGER,YEAR INTEGER,DAY_OF_THE_WEEK VARCHAR(2147483647),DESCRIPTION VARCHAR(2147483647) NOT NULL,WEEK_NUMBER INTEGER,GRID_ID VARCHAR(255),CONSTRAINT UN_BLACKOUT_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE USERS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,NAME VARCHAR(255) NOT NULL,CSM_USER_ID INTEGER NOT NULL,ACTIVE_FLAG BOOLEAN DEFAULT FALSE NOT NULL,GRID_ID VARCHAR(255),FIRST_NAME VARCHAR(255),MIDDLE_NAME VARCHAR(255),LAST_NAME VARCHAR(255),CONSTRAINT UN_USER_NAME UNIQUE(NAME),CONSTRAINT UN_USER_CSM_USER UNIQUE(CSM_USER_ID),CONSTRAINT UN_USER_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE AMENDMENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),PREVIOUS_AMENDMENT_ID INTEGER,NAME VARCHAR(2147483647),AMENDMENT_DATE DATE NOT NULL,MANDATORY BOOLEAN DEFAULT FALSE,RELEASED_DATE TIMESTAMP,CONSTRAINT FK_AMENDMENT_PREV FOREIGN KEY(PREVIOUS_AMENDMENT_ID) REFERENCES AMENDMENTS(ID) ON DELETE CASCADE,CONSTRAINT UN_AMENDMENT_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE CHANGES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,ACTION VARCHAR(8) NOT NULL,NEW_VALUE VARCHAR(2147483647),OLD_VALUE VARCHAR(2147483647),ATTRIBUTE VARCHAR(2147483647),DELTA_ID INTEGER NOT NULL,GRID_ID VARCHAR(255),UPDATED_DATE TIMESTAMP,CONSTRAINT UN_CHANGE_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE DELTAS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,NODE_ID INTEGER NOT NULL,AMENDMENT_ID INTEGER NOT NULL,GRID_ID VARCHAR(255),NODE_TYPE VARCHAR(6) NOT NULL,CONSTRAINT UN_DELTA_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE DELTA_NODE_TYPES(NODE_TYPE VARCHAR(6) NOT NULL PRIMARY KEY,NODE_TABLE VARCHAR(2147483647) NOT NULL)
CREATE MEMORY TABLE CHANGE_ACTIONS(ACTION VARCHAR(8) NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE USER_ROLES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,USER_ID INTEGER NOT NULL,CSM_GROUP_NAME VARCHAR(2147483647) NOT NULL,GRID_ID VARCHAR(255),CONSTRAINT FK_USER_ROLE_USER FOREIGN KEY(USER_ID) REFERENCES USERS(ID))
CREATE MEMORY TABLE USER_ROLE_SITES(USER_ROLE_ID INTEGER NOT NULL,SITE_ID INTEGER NOT NULL,PRIMARY KEY(USER_ROLE_ID,SITE_ID),CONSTRAINT FK_USER_ROLE_SITE_ROLE FOREIGN KEY(USER_ROLE_ID) REFERENCES USER_ROLES(ID),CONSTRAINT FK_USER_ROLE_SITE_SITE FOREIGN KEY(SITE_ID) REFERENCES SITES(ID))
CREATE MEMORY TABLE USER_ROLE_STUDY_SITES(USER_ROLE_ID INTEGER NOT NULL,STUDY_SITE_ID INTEGER NOT NULL,CONSTRAINT FK_USER_ROLE_STUDY_SITE_ROLE FOREIGN KEY(USER_ROLE_ID) REFERENCES USER_ROLES(ID),CONSTRAINT FK_USER_ROLE_STUDY_SITE_STUDY FOREIGN KEY(STUDY_SITE_ID) REFERENCES STUDY_SITES(ID))
CREATE MEMORY TABLE SOURCES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(255) NOT NULL,VERSION INTEGER NOT NULL,GRID_ID VARCHAR(255),MANUAL_FLAG BOOLEAN,CONSTRAINT UN_SOURCE_NAME UNIQUE(NAME),CONSTRAINT UN_SOURCE_GRID_ID UNIQUE(GRID_ID),CONSTRAINT UN_ONE_MANUAL_SOURCE UNIQUE(MANUAL_FLAG))
CREATE MEMORY TABLE AMENDMENT_APPROVALS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),AMENDMENT_ID INTEGER NOT NULL,STUDY_SITE_ID INTEGER NOT NULL,APPROVAL_DATE DATE,CONSTRAINT FK_APPRV_AMENDT FOREIGN KEY(AMENDMENT_ID) REFERENCES AMENDMENTS(ID),CONSTRAINT FK_APPRV_STUDY_SITE FOREIGN KEY(STUDY_SITE_ID) REFERENCES STUDY_SITES(ID),CONSTRAINT UN_AMENDT_APPRV_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE POPULATIONS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,NAME VARCHAR(2147483647) NOT NULL,ABBREVIATION VARCHAR(5) NOT NULL,STUDY_ID INTEGER,GRID_ID VARCHAR(255),CONSTRAINT FK_POPULATIONS_STUDIES FOREIGN KEY(STUDY_ID) REFERENCES STUDIES(ID),CONSTRAINT UN_POP_ABBREV_STUDY UNIQUE(ABBREVIATION,STUDY_ID),CONSTRAINT UN_POP_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE SUBJECT_POPULATIONS(ASSIGNMENT_ID INTEGER,POPULATION_ID INTEGER,CONSTRAINT FK_SUBJECT_POPULATIONS_SUBJECT_ASSIGNMENTS FOREIGN KEY(ASSIGNMENT_ID) REFERENCES SUBJECT_ASSIGNMENTS(ID),CONSTRAINT FK_SUBJECT_POPULATIONS_POPULATIONS FOREIGN KEY(POPULATION_ID) REFERENCES POPULATIONS(ID))
CREATE MEMORY TABLE AUTHENTICATION_SYSTEM_CONF(PROP VARCHAR(255) NOT NULL PRIMARY KEY,VALUE VARCHAR(2147483647),VERSION INTEGER DEFAULT 0 NOT NULL)
CREATE MEMORY TABLE PLANNED_ACTIVITY_LABELS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,PLANNED_ACTIVITY_ID INTEGER,REP_NUM INTEGER,GRID_ID VARCHAR(255),LABEL VARCHAR(255),CONSTRAINT UN_LABEL_PA_REP_NUM UNIQUE(PLANNED_ACTIVITY_ID,LABEL,REP_NUM))
CREATE MEMORY TABLE SCHEDULED_ACTIVITY_LABELS(SCHEDULED_ACTIVITY_ID INTEGER NOT NULL,LABEL VARCHAR(255) NOT NULL,CONSTRAINT PK_SCHED_ACT_LABEL PRIMARY KEY(SCHEDULED_ACTIVITY_ID,LABEL),CONSTRAINT FK_SCHED_ACT_LABEL_SCHED_ACT FOREIGN KEY(SCHEDULED_ACTIVITY_ID) REFERENCES SCHEDULED_ACTIVITIES(ID))
CREATE MEMORY TABLE ACTIVITY_PROPERTIES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,ACTIVITY_ID INTEGER NOT NULL,NAMESPACE VARCHAR(1024) NOT NULL,NAME VARCHAR(512) NOT NULL,VALUE VARCHAR(2147483647),GRID_ID VARCHAR(255),CONSTRAINT UN_NAMESPACE_NAME_ACTIVITY UNIQUE(ACTIVITY_ID,NAMESPACE,NAME),CONSTRAINT FK_ACT_PROPERTY_ACT FOREIGN KEY(ACTIVITY_ID) REFERENCES ACTIVITIES(ID))
CREATE MEMORY TABLE STUDY_SECONDARY_IDENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,GRID_ID VARCHAR(255),STUDY_ID INTEGER NOT NULL,IDENTIFIER_TYPE VARCHAR(255) NOT NULL,VALUE VARCHAR(255) NOT NULL,CONSTRAINT FK_STUDY_SEC_IDENT FOREIGN KEY(STUDY_ID) REFERENCES STUDIES(ID))
CREATE MEMORY TABLE OSGI_CM_PROPERTIES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,SERVICE_PID VARCHAR(1024),NAME VARCHAR(1024),COLLECTION_KIND VARCHAR(10),KIND VARCHAR(10))
CREATE MEMORY TABLE OSGI_CM_PROPERTY_VALUES(LIST_INDEX INTEGER DEFAULT 0 NOT NULL,PROPERTY_ID INTEGER NOT NULL,VALUE VARCHAR(1024),CONSTRAINT FK_OSGI_CM_PROP_VALUE FOREIGN KEY(PROPERTY_ID) REFERENCES OSGI_CM_PROPERTIES(ID))
CREATE MEMORY TABLE CSM_FILTER_CLAUSE(FILTER_CLAUSE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,CLASS_NAME VARCHAR(100) NOT NULL,FILTER_CHAIN VARCHAR(2000) NOT NULL,TARGET_CLASS_NAME VARCHAR(100) NOT NULL,TARGET_CLASS_ATTRIBUTE_NAME VARCHAR(100) NOT NULL,TARGET_CLASS_ATTRIBUTE_TYPE VARCHAR(100) NOT NULL,TARGET_CLASS_ALIAS VARCHAR(100),TARGET_CLASS_ATTRIBUTE_ALIAS VARCHAR(100),GENERATED_SQL_USER VARCHAR(4000) NOT NULL,GENERATED_SQL_GROUP VARCHAR(4000) NOT NULL,APPLICATION_ID INTEGER NOT NULL,UPDATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,CONSTRAINT FK_APPLICATION_FILTER_CLAUSE FOREIGN KEY(APPLICATION_ID) REFERENCES CSM_APPLICATION(APPLICATION_ID) ON DELETE CASCADE)
CREATE MEMORY TABLE CSM_MAPPING(MAPPING_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,APPLICATION_ID INTEGER NOT NULL,OBJECT_NAME VARCHAR(100) NOT NULL,ATTRIBUTE_NAME VARCHAR(100) NOT NULL,OBJECT_PACKAGE_NAME VARCHAR(100),TABLE_NAME VARCHAR(100),TABLE_NAME_GROUP VARCHAR(100),TABLE_NAME_USER VARCHAR(100),VIEW_NAME_GROUP VARCHAR(100),VIEW_NAME_USER VARCHAR(100),ACTIVE_FLAG SMALLINT DEFAULT 0 NOT NULL,MAINTAINED_FLAG SMALLINT DEFAULT 0 NOT NULL,UPDATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,CONSTRAINT FK_MAP_APPLICATION FOREIGN KEY(APPLICATION_ID) REFERENCES CSM_APPLICATION(APPLICATION_ID) ON DELETE CASCADE,CONSTRAINT UQ_MP_OBJ_NAME_ATTRI_NAME_APP_ID UNIQUE(OBJECT_NAME,ATTRIBUTE_NAME,APPLICATION_ID))
CREATE MEMORY TABLE CSM_GROUP(GROUP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,GROUP_NAME VARCHAR(255) NOT NULL,GROUP_DESC VARCHAR(200),UPDATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,APPLICATION_ID INTEGER NOT NULL,CONSTRAINT UQ_GROUP_GROUP_NAME UNIQUE(APPLICATION_ID,GROUP_NAME),CONSTRAINT FK_APPLICATION_GROUP FOREIGN KEY(APPLICATION_ID) REFERENCES CSM_APPLICATION(APPLICATION_ID) ON DELETE CASCADE)
CREATE INDEX IDX_APPLICATION_ID ON CSM_GROUP(APPLICATION_ID)
CREATE MEMORY TABLE CSM_PRIVILEGE(PRIVILEGE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PRIVILEGE_NAME VARCHAR(100) NOT NULL,PRIVILEGE_DESCRIPTION VARCHAR(200),UPDATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,CONSTRAINT UQ_PRIVILEGE_NAME UNIQUE(PRIVILEGE_NAME))
CREATE MEMORY TABLE CSM_PROTECTION_ELEMENT(PROTECTION_ELEMENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PROTECTION_ELEMENT_NAME VARCHAR(100) NOT NULL,PROTECTION_ELEMENT_DESCRIPTION VARCHAR(200),OBJECT_ID VARCHAR(100) NOT NULL,ATTRIBUTE VARCHAR(100),ATTRIBUTE_VALUE VARCHAR(100),PROTECTION_ELEMENT_TYPE VARCHAR(100),APPLICATION_ID INTEGER NOT NULL,UPDATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,CONSTRAINT UQ_PE_PE_NAME_ATTRIBUTE_VALUE_APP_ID UNIQUE(OBJECT_ID,ATTRIBUTE,ATTRIBUTE_VALUE,APPLICATION_ID),CONSTRAINT FK_PE_APPLICATION FOREIGN KEY(APPLICATION_ID) REFERENCES CSM_APPLICATION(APPLICATION_ID) ON DELETE CASCADE)
CREATE INDEX IDX_APPLICATION_ID_PE ON CSM_PROTECTION_ELEMENT(APPLICATION_ID)
CREATE INDEX IDX_OBJ_ATTR_APP ON CSM_PROTECTION_ELEMENT(OBJECT_ID,ATTRIBUTE,APPLICATION_ID)
CREATE MEMORY TABLE CSM_PROTECTION_GROUP(PROTECTION_GROUP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PROTECTION_GROUP_NAME VARCHAR(100) NOT NULL,PROTECTION_GROUP_DESCRIPTION VARCHAR(200),APPLICATION_ID INTEGER NOT NULL,LARGE_ELEMENT_COUNT_FLAG SMALLINT NOT NULL,UPDATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,PARENT_PROTECTION_GROUP_ID INTEGER,CONSTRAINT UQ_PROTECTION_GROUP_PROTECTION_GROUP_NAME UNIQUE(APPLICATION_ID,PROTECTION_GROUP_NAME),CONSTRAINT FK_PG_APPLICATION FOREIGN KEY(APPLICATION_ID) REFERENCES CSM_APPLICATION(APPLICATION_ID) ON DELETE CASCADE,CONSTRAINT FK_PROTECTION_GROUP FOREIGN KEY(PARENT_PROTECTION_GROUP_ID) REFERENCES CSM_PROTECTION_GROUP(PROTECTION_GROUP_ID))
CREATE INDEX IDX_APPLICATION_ID_PG ON CSM_PROTECTION_GROUP(APPLICATION_ID)
CREATE INDEX IDX_PARENT_PROTECTION_GROUP_ID ON CSM_PROTECTION_GROUP(PARENT_PROTECTION_GROUP_ID)
CREATE MEMORY TABLE CSM_PG_PE(PG_PE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PROTECTION_GROUP_ID INTEGER NOT NULL,PROTECTION_ELEMENT_ID INTEGER NOT NULL,UPDATE_DATE DATE DEFAULT CURRENT_DATE,CONSTRAINT UQ_PROTECTION_GROUP_PROTECTION_ELEMENT_PROTECTION_GROUP_ID UNIQUE(PROTECTION_ELEMENT_ID,PROTECTION_GROUP_ID),CONSTRAINT FK_PROTECTION_ELEMENT_PROTECTION_GROUP FOREIGN KEY(PROTECTION_ELEMENT_ID) REFERENCES CSM_PROTECTION_ELEMENT(PROTECTION_ELEMENT_ID) ON DELETE CASCADE,CONSTRAINT FK_PROTECTION_GROUP_PROTECTION_ELEMENT FOREIGN KEY(PROTECTION_GROUP_ID) REFERENCES CSM_PROTECTION_GROUP(PROTECTION_GROUP_ID) ON DELETE CASCADE)
CREATE INDEX IDX_PROTECTION_ELEMENT_ID ON CSM_PG_PE(PROTECTION_ELEMENT_ID)
CREATE INDEX IDX_PROTECTION_GROUP_ID_PGPE ON CSM_PG_PE(PROTECTION_GROUP_ID)
CREATE MEMORY TABLE CSM_ROLE(ROLE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,ROLE_NAME VARCHAR(100) NOT NULL,ROLE_DESCRIPTION VARCHAR(200),APPLICATION_ID INTEGER NOT NULL,ACTIVE_FLAG SMALLINT NOT NULL,UPDATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,CONSTRAINT UQ_ROLE_ROLE_NAME UNIQUE(APPLICATION_ID,ROLE_NAME),CONSTRAINT FK_APPLICATION_ROLE FOREIGN KEY(APPLICATION_ID) REFERENCES CSM_APPLICATION(APPLICATION_ID) ON DELETE CASCADE)
CREATE INDEX IDX_APPLICATION_ID_R ON CSM_ROLE(APPLICATION_ID)
CREATE MEMORY TABLE CSM_ROLE_PRIVILEGE(ROLE_PRIVILEGE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,ROLE_ID INTEGER NOT NULL,PRIVILEGE_ID INTEGER NOT NULL,CONSTRAINT UQ_ROLE_PRIVILEGE_ROLE_ID UNIQUE(PRIVILEGE_ID,ROLE_ID),CONSTRAINT FK_PRIVILEGE_ROLE FOREIGN KEY(PRIVILEGE_ID) REFERENCES CSM_PRIVILEGE(PRIVILEGE_ID) ON DELETE CASCADE,CONSTRAINT FK_ROLE FOREIGN KEY(ROLE_ID) REFERENCES CSM_ROLE(ROLE_ID) ON DELETE CASCADE)
CREATE INDEX IDX_PRIVILEGE_ID ON CSM_ROLE_PRIVILEGE(PRIVILEGE_ID)
CREATE INDEX IDX_ROLE_ID ON CSM_ROLE_PRIVILEGE(ROLE_ID)
CREATE MEMORY TABLE CSM_USER_GROUP(USER_GROUP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USER_ID INTEGER NOT NULL,GROUP_ID INTEGER NOT NULL,CONSTRAINT FK_USER_GROUP FOREIGN KEY(USER_ID) REFERENCES CSM_USER(USER_ID) ON DELETE CASCADE,CONSTRAINT FK_UG_GROUP FOREIGN KEY(GROUP_ID) REFERENCES CSM_GROUP(GROUP_ID) ON DELETE CASCADE)
CREATE INDEX IDX_USER_ID ON CSM_USER_GROUP(USER_ID)
CREATE INDEX IDX_GROUP_ID ON CSM_USER_GROUP(GROUP_ID)
CREATE MEMORY TABLE CSM_USER_GROUP_ROLE_PG(USER_GROUP_ROLE_PG_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USER_ID INTEGER,GROUP_ID INTEGER,ROLE_ID INTEGER NOT NULL,PROTECTION_GROUP_ID INTEGER NOT NULL,UPDATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,CONSTRAINT FK_USER_GROUP_ROLE_PROTECTION_GROUP_GROUPS FOREIGN KEY(GROUP_ID) REFERENCES CSM_GROUP(GROUP_ID) ON DELETE CASCADE,CONSTRAINT FK_USER_GROUP_ROLE_PROTECTION_GROUP_ROLE FOREIGN KEY(ROLE_ID) REFERENCES CSM_ROLE(ROLE_ID) ON DELETE CASCADE,CONSTRAINT FK_USER_GROUP_ROLE_PROTECTION_GROUP_PROTECTION_GROUP FOREIGN KEY(PROTECTION_GROUP_ID) REFERENCES CSM_PROTECTION_GROUP(PROTECTION_GROUP_ID) ON DELETE CASCADE,CONSTRAINT FK_USER_GROUP_ROLE_PROTECTION_GROUP_USER FOREIGN KEY(USER_ID) REFERENCES CSM_USER(USER_ID) ON DELETE CASCADE)
CREATE INDEX IDX_GROUP_ID_UGRPG ON CSM_USER_GROUP_ROLE_PG(GROUP_ID)
CREATE INDEX IDX_ROLE_ID_UGRPG ON CSM_USER_GROUP_ROLE_PG(ROLE_ID)
CREATE INDEX IDX_PROTECTION_GROUP_ID_UGRPG ON CSM_USER_GROUP_ROLE_PG(PROTECTION_GROUP_ID)
CREATE INDEX IDX_USER_ID_UGRPG ON CSM_USER_GROUP_ROLE_PG(USER_ID)
CREATE MEMORY TABLE CSM_USER_PE(USER_PROTECTION_ELEMENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PROTECTION_ELEMENT_ID INTEGER NOT NULL,USER_ID INTEGER NOT NULL,CONSTRAINT UQ_USER_PROTECTION_ELEMENT_PROTECTION_ELEMENT_ID UNIQUE(USER_ID,PROTECTION_ELEMENT_ID),CONSTRAINT FK_PE_USER FOREIGN KEY(USER_ID) REFERENCES CSM_USER(USER_ID) ON DELETE CASCADE,CONSTRAINT FK_PROTECTION_ELEMENT_USER FOREIGN KEY(PROTECTION_ELEMENT_ID) REFERENCES CSM_PROTECTION_ELEMENT(PROTECTION_ELEMENT_ID) ON DELETE CASCADE)
CREATE INDEX IDX_USER_ID_UPE ON CSM_USER_PE(USER_ID)
CREATE INDEX IDX_PROTECTION_ELEMENT_ID_UPE ON CSM_USER_PE(PROTECTION_ELEMENT_ID)
CREATE MEMORY TABLE MANAGING_SITES(STUDY_ID INTEGER NOT NULL,SITE_ID INTEGER NOT NULL,CONSTRAINT FK_STUDY_MGSITE_STUDY FOREIGN KEY(STUDY_ID) REFERENCES STUDIES(ID),CONSTRAINT FK_STUDY_MGSITE_SITE FOREIGN KEY(SITE_ID) REFERENCES SITES(ID))
CREATE MEMORY TABLE USER_ACTIONS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION INTEGER DEFAULT 0 NOT NULL,CSM_USER_ID INTEGER NOT NULL,CONTEXT VARCHAR(2147483647) NOT NULL,DESCRIPTION VARCHAR(2147483647) NOT NULL,ACTION_TYPE VARCHAR(2147483647) NOT NULL,UNDONE BOOLEAN DEFAULT FALSE,GRID_ID VARCHAR(255),CONSTRAINT UN_USER_ACTION_GRID_ID UNIQUE(GRID_ID))
CREATE MEMORY TABLE SUBJECT_PROPERTIES(SUBJECT_ID INTEGER NOT NULL,LIST_INDEX INTEGER DEFAULT 0 NOT NULL,NAME VARCHAR(2147483647) NOT NULL,VALUE VARCHAR(2147483647),CONSTRAINT PK_SUBJECT_PROPERTY PRIMARY KEY(SUBJECT_ID,LIST_INDEX),CONSTRAINT FK_SUBJECT_PROP_SUBJECT FOREIGN KEY(SUBJECT_ID) REFERENCES SUBJECTS(ID))
ALTER TABLE STUDIES ADD CONSTRAINT FK_STUDY_CUR_AMENDMENT FOREIGN KEY(AMENDMENT_ID) REFERENCES AMENDMENTS(ID)
ALTER TABLE STUDIES ADD CONSTRAINT FK_STUDY_DEV_AMENDMENT FOREIGN KEY(DEV_AMENDMENT_ID) REFERENCES AMENDMENTS(ID)
ALTER TABLE STUDY_SEGMENTS ADD CONSTRAINT FK_ARM_EPOCH FOREIGN KEY(EPOCH_ID) REFERENCES EPOCHS(ID)
ALTER TABLE ACTIVITIES ADD CONSTRAINT FK_ACTIV_TYPE_ID FOREIGN KEY(ACTIVITY_TYPE_ID) REFERENCES ACTIVITY_TYPES(ID)
ALTER TABLE ACTIVITIES ADD CONSTRAINT FK_SOURCE_ID FOREIGN KEY(SOURCE_ID) REFERENCES SOURCES(ID)
ALTER TABLE PLANNED_ACTIVITIES ADD CONSTRAINT FK_PLANNED_ACTIVITIES_POPULATIONS FOREIGN KEY(POPULATION_ID) REFERENCES POPULATIONS(ID)
ALTER TABLE SUBJECT_ASSIGNMENTS ADD CONSTRAINT FK_SCHEDULE_AMENDMENT FOREIGN KEY(CURRENT_AMENDMENT_ID) REFERENCES AMENDMENTS(ID)
ALTER TABLE SCHEDULED_ACTIVITIES ADD CONSTRAINT FK_SCHED_EVT_ARM FOREIGN KEY(SCHEDULED_STUDY_SEGMENT_ID) REFERENCES SCHEDULED_STUDY_SEGMENTS(ID)
ALTER TABLE SCHEDULED_ACTIVITIES ADD CONSTRAINT FK_SCHED_EVT_AMENDMENT FOREIGN KEY(SOURCE_AMENDMENT_ID) REFERENCES AMENDMENTS(ID)
ALTER TABLE AUDIT_EVENTS ADD CONSTRAINT FK_AUDIT_EVENT_USER_ACTION FOREIGN KEY(USER_ACTION_ID) REFERENCES USER_ACTIONS(GRID_ID)
ALTER TABLE CHANGES ADD CONSTRAINT FK_CHANGE_ACTION FOREIGN KEY(ACTION) REFERENCES CHANGE_ACTIONS(ACTION)
ALTER TABLE DELTAS ADD CONSTRAINT FK_DELTA_NODE_TYPE FOREIGN KEY(NODE_TYPE) REFERENCES DELTA_NODE_TYPES(NODE_TYPE)
ALTER TABLE STUDIES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE STUDY_SEGMENTS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE ACTIVITIES ALTER COLUMN ID RESTART WITH 2
ALTER TABLE ACTIVITY_TYPES ALTER COLUMN ID RESTART WITH 6
ALTER TABLE PERIODS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE PLANNED_ACTIVITIES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE SUBJECTS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE SITES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE STUDY_SITES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE SUBJECT_ASSIGNMENTS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE PLANNED_CALENDARS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE EPOCHS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE CSM_APPLICATION ALTER COLUMN APPLICATION_ID RESTART WITH 3
ALTER TABLE CSM_USER ALTER COLUMN USER_ID RESTART WITH 0
ALTER TABLE SCHEDULED_CALENDARS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE SCHEDULED_ACTIVITIES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE SCHEDULED_STUDY_SEGMENTS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE SCHEDULED_ACTIVITY_STATES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE LOGIN_AUDITS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE AUDIT_EVENTS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE AUDIT_EVENT_VALUES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE ADVERSE_EVENTS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE NOTIFICATIONS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE HOLIDAYS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE USERS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE AMENDMENTS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE CHANGES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE DELTAS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE USER_ROLES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE SOURCES ALTER COLUMN ID RESTART WITH 2
ALTER TABLE AMENDMENT_APPROVALS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE POPULATIONS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE PLANNED_ACTIVITY_LABELS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE ACTIVITY_PROPERTIES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE STUDY_SECONDARY_IDENTS ALTER COLUMN ID RESTART WITH 1
ALTER TABLE OSGI_CM_PROPERTIES ALTER COLUMN ID RESTART WITH 1
ALTER TABLE CSM_FILTER_CLAUSE ALTER COLUMN FILTER_CLAUSE_ID RESTART WITH 0
ALTER TABLE CSM_MAPPING ALTER COLUMN MAPPING_ID RESTART WITH 0
ALTER TABLE CSM_GROUP ALTER COLUMN GROUP_ID RESTART WITH 24
ALTER TABLE CSM_PRIVILEGE ALTER COLUMN PRIVILEGE_ID RESTART WITH 24
ALTER TABLE CSM_PROTECTION_ELEMENT ALTER COLUMN PROTECTION_ELEMENT_ID RESTART WITH 0
ALTER TABLE CSM_PROTECTION_GROUP ALTER COLUMN PROTECTION_GROUP_ID RESTART WITH 0
ALTER TABLE CSM_PG_PE ALTER COLUMN PG_PE_ID RESTART WITH 0
ALTER TABLE CSM_ROLE ALTER COLUMN ROLE_ID RESTART WITH 24
ALTER TABLE CSM_ROLE_PRIVILEGE ALTER COLUMN ROLE_PRIVILEGE_ID RESTART WITH 24
ALTER TABLE CSM_USER_GROUP ALTER COLUMN USER_GROUP_ID RESTART WITH 0
ALTER TABLE CSM_USER_GROUP_ROLE_PG ALTER COLUMN USER_GROUP_ROLE_PG_ID RESTART WITH 0
ALTER TABLE CSM_USER_PE ALTER COLUMN USER_PROTECTION_ELEMENT_ID RESTART WITH 0
ALTER TABLE USER_ACTIONS ALTER COLUMN ID RESTART WITH 1
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 10
SET SCHEMA PUBLIC
INSERT INTO BERING_VERSION VALUES(1,8)
INSERT INTO BERING_VERSION VALUES(2,14)
INSERT INTO BERING_VERSION VALUES(3,11)
INSERT INTO BERING_VERSION VALUES(4,6)
INSERT INTO BERING_VERSION VALUES(5,4)
INSERT INTO BERING_VERSION VALUES(6,15)
INSERT INTO BERING_VERSION VALUES(7,22)
INSERT INTO BERING_VERSION VALUES(8,10)
INSERT INTO BERING_VERSION VALUES(9,22)
INSERT INTO BERING_VERSION VALUES(10,4)
INSERT INTO BERING_VERSION VALUES(11,5)
INSERT INTO BERING_VERSION VALUES(12,3)
INSERT INTO BERING_VERSION VALUES(13,3)
INSERT INTO BERING_VERSION VALUES(14,6)
INSERT INTO BERING_VERSION VALUES(15,10)
INSERT INTO BERING_VERSION VALUES(16,4)
INSERT INTO BERING_VERSION VALUES(17,6)
INSERT INTO BERING_VERSION VALUES(18,3)
INSERT INTO BERING_VERSION VALUES(19,11)
INSERT INTO BERING_VERSION VALUES(20,5)
INSERT INTO ACTIVITIES VALUES(1,0,'Reconsent',NULL,5,NULL,NULL,'Reconsent')
INSERT INTO ACTIVITY_TYPES VALUES(1,0,'Disease Measure','1')
INSERT INTO ACTIVITY_TYPES VALUES(2,0,'Intervention','2')
INSERT INTO ACTIVITY_TYPES VALUES(3,0,'Lab Test','3')
INSERT INTO ACTIVITY_TYPES VALUES(4,0,'Procedure','4')
INSERT INTO ACTIVITY_TYPES VALUES(5,0,'Other','5')
INSERT INTO CSM_APPLICATION VALUES(1,'csm_upt','UPT Super Admin Application',0,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO CSM_APPLICATION VALUES(2,'study_calendar','study calendar',0,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL)
INSERT INTO SCHEDULED_ACTIVITY_MODES VALUES(1,'scheduled')
INSERT INTO SCHEDULED_ACTIVITY_MODES VALUES(2,'occurred')
INSERT INTO SCHEDULED_ACTIVITY_MODES VALUES(3,'canceled')
INSERT INTO SCHEDULED_ACTIVITY_MODES VALUES(4,'conditional')
INSERT INTO SCHEDULED_ACTIVITY_MODES VALUES(5,'NA')
INSERT INTO SCHEDULED_ACTIVITY_MODES VALUES(6,'missed')
INSERT INTO DELTA_NODE_TYPES VALUES('cal','planned_calendars')
INSERT INTO DELTA_NODE_TYPES VALUES('epoch','epochs')
INSERT INTO DELTA_NODE_TYPES VALUES('event','planned_events')
INSERT INTO DELTA_NODE_TYPES VALUES('period','periods')
INSERT INTO DELTA_NODE_TYPES VALUES('popltn','populations')
INSERT INTO DELTA_NODE_TYPES VALUES('segmnt','study_segments')
INSERT INTO DELTA_NODE_TYPES VALUES('study','populations')
INSERT INTO CHANGE_ACTIONS VALUES('add')
INSERT INTO CHANGE_ACTIONS VALUES('property')
INSERT INTO CHANGE_ACTIONS VALUES('remove')
INSERT INTO CHANGE_ACTIONS VALUES('reorder')
INSERT INTO AUTHENTICATION_SYSTEM_CONF VALUES('authenticationSystemPre25',NULL,0)
INSERT INTO CSM_GROUP VALUES(1,'system_administrator','Configures the technical system level properties and behavior of the applications (i.e. the password policy, email setup, ESB, etc).','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(2,'business_administrator','Manages the domain related application wide properties and behavior (i.e. label names, reference data lists, etc)','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(3,'person_and_organization_information_manager','Manages organizations and rosters / Creates and updates person info including contact info, degrees/certifications, rosters they?re associated with','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(4,'data_importer','Identifies studies defined by Coordinating Center and imports as a consumer that data defined elsewhere','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(5,'user_administrator','Ability to read system personnel (research staff and investigators) and create/manage user accounts/application roles, defines Custom Combination Roles','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(6,'study_qa_manager','Updates core study info after saving / opening study.(e.g. PI, title, phase, epochs/arms, basic study design)  Read-only review of study calendar template / releases templates to participating sites','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(7,'study_creator','Creates the core study info (e.g. PI, title, description, phase, epochs/arms & basic study design, etc.) NOTE:  some sites may want to combine the supplemental study info roles into this role','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(8,'supplemental_study_information_manager','Adds treatment assignment, drugs, adEERS-specific diseases, adEERs reporting criteria, CTC/MedDRA version, etc.  Update/manage registration metadata (e.g. stratifications, eligibility criteria, notifi','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(9,'study_team_administrator','Connects study level people to study and internal staff to study. Assigns internal staff to protocol, determines study artifact accessiblity for staff (e.g. study calendar templates, CRFs, etc.)','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(10,'study_site_participation_administrator','Connects participating sites to a protocol','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(11,'ae_rule_and_report_manager','Creates, manages, imports AE rules / Creates, manages, imports AE report definitions','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(12,'study_calendar_template_builder','Creates and updates study calendar templates','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(13,'registration_qa_manager','Updates registration information (study subject ID, Date of consent) after enrollment. Can waive the eligibility criteria for certain study subjects.','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(14,'subject_manager','Defines patient to system (remaining subject data managed by other roles which are not defined)','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(15,'study_subject_calendar_manager','Creates and updates a subject-specific study calendar based on a study calendar template','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(16,'registrar','Accepts and approves/denies subject registration requests.  Requests subject registration on a particular study','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(17,'ae_reporter','Creates / updates info about AE that needs reported / submits report to appropriate parties per report definition. Enters set of required AEs to be assessed and any other AEs that patient experienced.','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(18,'ae_expedited_report_reviewer','Read-only: reviews, provides comments, and routes expedited reports through the review workflow','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(19,'ae_study_data_reviewer','Read-only: reviews, provides comments, and adverse event data through a review workflow','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(20,'lab_impact_calendar_notifier','Creates a calendar notification for a potential lab-based treatment modification','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(21,'lab_data_user','Enters, edits, and imports labs from LIMS, viewing labs, selecting and sending labs to CDMS and caAERS','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(22,'data_reader','Read-only: typically not part of org being audited, granted temporary access (no updates) to whole study or specific study/subjects, or any data entered by site for study/subject, crosses all apps.','2011-05-12',2)
INSERT INTO CSM_GROUP VALUES(23,'data_analyst','Read-only: searches for data, uses built-in analysis tools, exports data to third party tools','2011-05-12',2)
INSERT INTO CSM_PRIVILEGE VALUES(1,'system_administrator','Configures the technical system level properties and behavior of the applications (i.e. the password policy, email setup, ESB, etc).','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(2,'business_administrator','Manages the domain related application wide properties and behavior (i.e. label names, reference data lists, etc)','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(3,'person_and_organization_information_manager','Manages organizations and rosters / Creates and updates person info including contact info, degrees/certifications, rosters they?re associated with','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(4,'data_importer','Identifies studies defined by Coordinating Center and imports as a consumer that data defined elsewhere','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(5,'user_administrator','Ability to read system personnel (research staff and investigators) and create/manage user accounts/application roles, defines Custom Combination Roles','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(6,'study_qa_manager','Updates core study info after saving / opening study.(e.g. PI, title, phase, epochs/arms, basic study design)  Read-only review of study calendar template / releases templates to participating sites','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(7,'study_creator','Creates the core study info (e.g. PI, title, description, phase, epochs/arms & basic study design, etc.) NOTE:  some sites may want to combine the supplemental study info roles into this role','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(8,'supplemental_study_information_manager','Adds treatment assignment, drugs, adEERS-specific diseases, adEERs reporting criteria, CTC/MedDRA version, etc.  Update/manage registration metadata (e.g. stratifications, eligibility criteria, notifi','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(9,'study_team_administrator','Connects study level people to study and internal staff to study. Assigns internal staff to protocol, determines study artifact accessiblity for staff (e.g. study calendar templates, CRFs, etc.)','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(10,'study_site_participation_administrator','Connects participating sites to a protocol','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(11,'ae_rule_and_report_manager','Creates, manages, imports AE rules / Creates, manages, imports AE report definitions','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(12,'study_calendar_template_builder','Creates and updates study calendar templates','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(13,'registration_qa_manager','Updates registration information (study subject ID, Date of consent) after enrollment. Can waive the eligibility criteria for certain study subjects.','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(14,'subject_manager','Defines patient to system (remaining subject data managed by other roles which are not defined)','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(15,'study_subject_calendar_manager','Creates and updates a subject-specific study calendar based on a study calendar template','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(16,'registrar','Accepts and approves/denies subject registration requests. Requests subject registration on a particular study','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(17,'ae_reporter','Creates / updates info about AE that needs reported / submits report to appropriate parties per report definition. Enters set of required AEs to be assessed and any other AEs that patient experienced.','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(18,'ae_expedited_report_reviewer','Read-only: reviews, provides comments, and routes expedited reports through the review workflow','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(19,'ae_study_data_reviewer','Read-only: reviews, provides comments, and adverse event data through a review workflow','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(20,'lab_impact_calendar_notifier','Creates a calendar notification for a potential lab-based treatment modification','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(21,'lab_data_user','Enters, edits, and imports labs from LIMS, viewing labs, selecting and sending labs to CDMS and caAERS','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(22,'data_reader','Read-only: typically not part of org being audited, granted temporary access (no updates) to whole study or specific study/subjects, or any data entered by site for study/subject, crosses all apps.','2011-05-12')
INSERT INTO CSM_PRIVILEGE VALUES(23,'data_analyst','Read-only: searches for data, uses built-in analysis tools, exports data to third party tools','2011-05-12')
INSERT INTO CSM_ROLE VALUES(1,'system_administrator','Configures the technical system level properties and behavior of the applications (i.e. the password policy, email setup, ESB, etc).',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(2,'business_administrator','Manages the domain related application wide properties and behavior (i.e. label names, reference data lists, etc)',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(3,'person_and_organization_information_manager','Manages organizations and rosters / Creates and updates person info including contact info, degrees/certifications, rosters they?re associated with',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(4,'data_importer','Identifies studies defined by Coordinating Center and imports as a consumer that data defined elsewhere',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(5,'user_administrator','Ability to read system personnel (research staff and investigators) and create/manage user accounts/application roles, defines Custom Combination Roles',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(6,'study_qa_manager','Updates core study info after saving / opening study.(e.g. PI, title, phase, epochs/arms, basic study design)  Read-only review of study calendar template / releases templates to participating sites',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(7,'study_creator','Creates the core study info (e.g. PI, title, description, phase, epochs/arms & basic study design, etc.) NOTE:  some sites may want to combine the supplemental study info roles into this role',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(8,'supplemental_study_information_manager','Adds treatment assignment, drugs, adEERS-specific diseases, adEERs reporting criteria, CTC/MedDRA version, etc.  Update/manage registration metadata (e.g. stratifications, eligibility criteria, notifi',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(9,'study_team_administrator','Connects study level people to study and internal staff to study. Assigns internal staff to protocol, determines study artifact accessiblity for staff (e.g. study calendar templates, CRFs, etc.)',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(10,'study_site_participation_administrator','Connects participating sites to a protocol',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(11,'ae_rule_and_report_manager','Creates, manages, imports AE rules / Creates, manages, imports AE report definitions',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(12,'study_calendar_template_builder','Creates and updates study calendar templates',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(13,'registration_qa_manager','Updates registration information (study subject ID, Date of consent) after enrollment. Can waive the eligibility criteria for certain study subjects.',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(14,'subject_manager','Defines patient to system (remaining subject data managed by other roles which are not defined)',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(15,'study_subject_calendar_manager','Creates and updates a subject-specific study calendar based on a study calendar template',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(16,'registrar','Accepts and approves/denies subject registration requests. Requests subject registration on a particular study',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(17,'ae_reporter','Creates / updates info about AE that needs reported / submits report to appropriate parties per report definition. Enters set of required AEs to be assessed and any other AEs that patient experienced.',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(18,'ae_expedited_report_reviewer','Read-only: reviews, provides comments, and routes expedited reports through the review workflow',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(19,'ae_study_data_reviewer','Read-only: reviews, provides comments, and adverse event data through a review workflow',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(20,'lab_impact_calendar_notifier','Creates a calendar notification for a potential lab-based treatment modification',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(21,'lab_data_user','Enters, edits, and imports labs from LIMS, viewing labs, selecting and sending labs to CDMS and caAERS',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(22,'data_reader','Read-only: typically not part of org being audited, granted temporary access (no updates) to whole study or specific study/subjects, or any data entered by site for study/subject, crosses all apps.',2,1,'2011-05-12')
INSERT INTO CSM_ROLE VALUES(23,'data_analyst','Read-only: searches for data, uses built-in analysis tools, exports data to third party tools',2,1,'2011-05-12')
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(1,1,1)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(2,2,2)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(3,3,3)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(4,4,4)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(5,5,5)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(6,6,6)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(7,7,7)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(8,8,8)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(9,9,9)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(10,10,10)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(11,11,11)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(12,12,12)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(13,13,13)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(14,14,14)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(15,15,15)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(16,16,16)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(17,17,17)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(18,18,18)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(19,19,19)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(20,20,20)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(21,21,21)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(22,22,22)
INSERT INTO CSM_ROLE_PRIVILEGE VALUES(23,23,23)
